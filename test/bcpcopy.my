#!/bin/bash

#include "ext.my"

global str TMPDIR;
global int SIZE;
global str SOURCE;
global str TARGET;

do_init

TMPDIR="/var/tmp/t2";
SIZE=250000;

proc bcp_out( str P_DB, str P_TABNAME) {

	do_verbose("bcp $P_DB..$P_TABNAME out $P_TABNAME -c -t | -U$DBUSER -S$DSQUERY");
	bcp "$P_DB..$P_TABNAME" out "$P_TABNAME" -c -t "|" -U$DBUSER -S$DSQUERY <<
$DBPASSWD
>;

}

proc bcp_in( str P_DB, str P_TABNAME) {

	split -l "$SIZE" "$P_TABNAME" x;

	for PIECE in xa*
	do
		echo $PIECE;

		do_isql( "$DBARG", "dump tran $DBARG with truncate_only");
		checkret( "$?", "Can't dump transaction log!", "nolog");

		do_verbose( "bcp $P_DB..$P_TABNAME in $PIECE -c -t | -U$DBUSER -S$DSQUERY");
		bcp "$P_DB..$P_TABNAME" "in" $PIECE -c -t "|" -U$DBUSER -S$DSQUERY <<
$DBPASSWD
>;
	done
}

proc usage( str FULLNAME) {

	str NAME;

        NAME=$(basename $FULLNAME);

        echo "usage: $NAME [-e env][-u user][-t][-v] -n table-name -d database source-ds target-ds";
	echo "";
        echo " -t = test mode, don't actually bcp the data in";
        echo " -v = verbose mode - extra output";
        echo " -d database = single database to run against";
	echo " -n table-name = name of the table to copy across";
	echo " -e = env to use (ie FSGDEV2-TST1)";
        echo " -u = database user to login as";
        echo "";

        exit 1;
}

getopt "u:,USE_USER,e:,USE_ENV,v,VERBOSE,t,TESTMODE,n:,NAMEARG,d:,DBARG";

if [ \( $# -ne 2 \) -o \( -z "$DBARG" \) -o \( -z "$NAMEARG" \) ] then
        usage $0;
fi

SOURCE="$1";
TARGET="$2";

setdb( "$SOURCE", "$USE_USER");

do_verbose( "Doing $NAMEARG");

if [ ! -d "$TMPDIR" ] then
	mkdir -p "$TMPDIR";
fi
cd $TMPDIR;

do_verbose( "bcp_out $DBARG $NAMEARG");
bcp_out "$DBARG" "$NAMEARG";

if [ ! -f "$NAMEARG" ] then
	echo "NO such file $NAMEARG";
	exit 1;
fi

setdb $TARGET;

if [ -z "$TESTMODE" ] then
	do_verbose( "Starting load");
	do_verbose( "bcp_in $DSQUERY $DBARG $NAMEARG");
	bcp_in "$DSQUERY" "$DBARG" "$NAMEARG";
else
	echo "Running in testmode, no changes to be made";
	echo "";
	echo "bcp_in $DSQUERY $DBARG $NAMEARG";
fi

rm -f $TMPDIR/xa*;

do_finish
